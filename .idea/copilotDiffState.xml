<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/page.tsx">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/page.tsx" />
              <option name="originalContent" value="'use client';&#10;&#10;import { useEffect, useState } from 'react';&#10;import { useRouter } from 'next/navigation';&#10;import {FileText, Kanban, Mail, Plus, Settings, Users, BarChart} from 'lucide-react';&#10;import {Button} from '@/components/ui/button';&#10;import {cn} from '@/lib/utils';&#10;import EmailClient from '@/components/email/EmailClient';&#10;import KanbanBoard from '@/components/kanban/KanbanBoard';&#10;import DocumentsList from '@/components/documents/DocumentsList';&#10;import Sidebar from '@/components/layout/Sidebar';&#10;import Dashboard from '@/components/dashboard/Dashboard';&#10;&#10;const NAVIGATION_ITEMS = [&#10;  { id: 'dashboard', label: 'Dashboard', icon: BarChart, count: 0 },&#10;  { id: 'email', label: 'Email', icon: Mail, count: 3 },&#10;  { id: 'kanban', label: 'Obrigações Contratuais', icon: Kanban, count: 4 },&#10;  { id: 'documents', label: 'Documentos', icon: FileText, count: 3 },&#10;  { id: 'team', label: 'Equipe', icon: Users, count: 0 },&#10;  { id: 'settings', label: 'Configurações', icon: Settings, count: 0 },&#10;];&#10;&#10;export default function HomePage() {&#10;  const [isAuthenticated, setIsAuthenticated] = useState(false);&#10;  const [isLoading, setIsLoading] = useState(true);&#10;  const [mounted, setMounted] = useState(false);&#10;  const [user, setUser] = useState&lt;{ nm_responsavel: string; email: string; } | undefined&gt;(undefined);&#10;  const router = useRouter();&#10;&#10;  useEffect(() =&gt; {&#10;    setMounted(true);&#10;  }, []);&#10;&#10;  useEffect(() =&gt; {&#10;    if (!mounted) return;&#10;    &#10;    // Check authentication status&#10;    try {&#10;      const authStatus = typeof window !== 'undefined' ? localStorage.getItem('user') : null;&#10;      if (authStatus) {&#10;        setIsAuthenticated(true);&#10;        try {&#10;          const userData = JSON.parse(authStatus);&#10;          setUser(userData);&#10;        } catch (error) {&#10;          console.error('Error parsing user data:', error);&#10;        }&#10;      } else {&#10;        router.push('/login');&#10;      }&#10;    } catch (error) {&#10;      console.error('Error accessing localStorage:', error);&#10;      router.push('/login');&#10;    }&#10;    setIsLoading(false);&#10;  }, [router, mounted]);&#10;&#10;  const [activeModule, setActiveModule] = useState&lt;'dashboard' | 'email' | 'kanban' | 'documents' | 'team' | 'settings'&gt;('dashboard');&#10;  const [sidebarOpen, setSidebarOpen] = useState(true);&#10;&#10;  if (!mounted || isLoading) {&#10;    return (&#10;      &lt;div className=&quot;min-h-screen bg-white flex items-center justify-center&quot;&gt;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#10;          &lt;div className=&quot;w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4&quot; /&gt;&#10;          &lt;p className=&quot;text-gray-600&quot;&gt;Carregando...&lt;/p&gt;&#10;        &lt;/div&gt;&#10;      &lt;/div&gt;&#10;    );&#10;  }&#10;&#10;  if (!isAuthenticated) {&#10;    return null;&#10;  }&#10;&#10;  const renderActiveModule = () =&gt; {&#10;    switch (activeModule) {&#10;      case 'dashboard':&#10;        return &lt;Dashboard /&gt;;&#10;      case 'email':&#10;        return &lt;EmailClient /&gt;;&#10;      case 'kanban':&#10;        return &lt;KanbanBoard /&gt;;&#10;      case 'documents':&#10;        return &lt;DocumentsList /&gt;;&#10;      case 'team':&#10;        return (&#10;          &lt;div className=&quot;p-6&quot;&gt;&#10;            &lt;div className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;              &lt;h1 className=&quot;text-3xl font-bold text-gray-900 mb-6 flex items-center&quot;&gt;&#10;                &lt;Users className=&quot;h-8 w-8 mr-3&quot; /&gt;&#10;                Gerenciamento de Equipe&#10;              &lt;/h1&gt;&#10;              &lt;div className=&quot;bg-white rounded-3xl shadow-sm border p-8 text-center&quot;&gt;&#10;                &lt;Users className=&quot;h-16 w-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-900 mb-2&quot;&gt;Módulo de Equipe&lt;/h3&gt;&#10;                &lt;p className=&quot;text-gray-600 mb-4&quot;&gt;Gerencie membros da equipe, funções e permissões&lt;/p&gt;&#10;                &lt;Button&gt;&#10;                  &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#10;                  Adicionar Membro da Equipe&#10;                &lt;/Button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        );&#10;      case 'settings':&#10;        return (&#10;          &lt;div className=&quot;p-6&quot;&gt;&#10;            &lt;div className=&quot;max-w-4xl mx-auto&quot;&gt;&#10;              &lt;h1 className=&quot;text-3xl font-bold text-gray-900 mb-6 flex items-center&quot;&gt;&#10;                &lt;Settings className=&quot;h-8 w-8 mr-3&quot; /&gt;&#10;                Configurações&#10;              &lt;/h1&gt;&#10;              &lt;div className=&quot;bg-white rounded-3xl shadow-sm border p-8 text-center&quot;&gt;&#10;                &lt;Settings className=&quot;h-16 w-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-900 mb-2&quot;&gt;Configurações da Aplicação&lt;/h3&gt;&#10;                &lt;p className=&quot;text-gray-600 mb-4&quot;&gt;Configure suas preferências da aplicação&lt;/p&gt;&#10;                &lt;Button variant=&quot;secondary&quot;&gt;Configurar&lt;/Button&gt;&#10;              &lt;/div&gt;&#10;            &lt;/div&gt;&#10;          &lt;/div&gt;&#10;        );&#10;      default:&#10;        return &lt;Dashboard /&gt;;&#10;    }&#10;  };&#10;&#10;  return (&#10;    &lt;div className=&quot;min-h-screen bg-white flex flex-col&quot;&gt;&#10;      &lt;main&#10;        className={cn(&#10;          &quot;flex flex-row min-w-0 transition-all duration-300 ease-in-out max-h-screen&quot;,&#10;          &quot;w-full h-full&quot;,&#10;        )}&#10;      &gt;&#10;        &lt;Sidebar&#10;          navigationItems={NAVIGATION_ITEMS}&#10;          activeModule={activeModule}&#10;          onModuleChange={setActiveModule}&#10;          isOpen={sidebarOpen}&#10;          onToggle={() =&gt; setSidebarOpen(!sidebarOpen)}&#10;          user={user}&#10;        /&gt;&#10;        &lt;div className=&quot;flex flex-col w-full overflow-auto min-h-screen&quot;&gt;&#10;          {renderActiveModule()}&#10;        &lt;/div&gt;&#10;      &lt;/main&gt;&#10;    &lt;/div&gt;&#10;  );&#10;}" />
              <option name="updatedContent" value="'use client';&#13;&#10;&#13;&#10;import { useEffect, useState } from 'react';&#13;&#10;import { useRouter } from 'next/navigation';&#13;&#10;import {FileText, Kanban, Mail, Plus, Settings, Users, BarChart} from 'lucide-react';&#13;&#10;import {Button} from '@/components/ui/button';&#13;&#10;import {cn} from '@/lib/utils';&#13;&#10;import EmailClient from '@/components/email/EmailClient';&#13;&#10;import KanbanBoard from '@/components/kanban/KanbanBoard';&#13;&#10;import DocumentsList from '@/components/documents/DocumentsList';&#13;&#10;import Sidebar from '@/components/layout/Sidebar';&#13;&#10;import Dashboard from '@/components/dashboard/Dashboard';&#13;&#10;&#13;&#10;const NAVIGATION_ITEMS = [&#13;&#10;  { id: 'dashboard', label: 'Dashboard', icon: BarChart, count: 0 },&#13;&#10;  { id: 'email', label: 'Email', icon: Mail, count: 3 },&#13;&#10;  { id: 'kanban', label: 'Obrigações Contratuais', icon: Kanban, count: 4 },&#13;&#10;  { id: 'documents', label: 'Documentos', icon: FileText, count: 3 },&#13;&#10;  { id: 'team', label: 'Equipe', icon: Users, count: 0 },&#13;&#10;  { id: 'settings', label: 'Configurações', icon: Settings, count: 0 },&#13;&#10;];&#13;&#10;&#13;&#10;export default function HomePage() {&#13;&#10;  const [mounted, setMounted] = useState(false);&#13;&#10;  const [user, setUser] = useState&lt;{ nm_responsavel: string; email: string; } | undefined&gt;(undefined);&#13;&#10;  const router = useRouter();&#13;&#10;&#13;&#10;  useEffect(() =&gt; {&#13;&#10;    setMounted(true);&#13;&#10;  }, []);&#13;&#10;&#13;&#10;  const [activeModule, setActiveModule] = useState&lt;'dashboard' | 'email' | 'kanban' | 'documents' | 'team' | 'settings'&gt;('dashboard');&#13;&#10;  const [sidebarOpen, setSidebarOpen] = useState(true);&#13;&#10;&#13;&#10;  if (!mounted) {&#13;&#10;    return (&#13;&#10;      &lt;div className=&quot;min-h-screen bg-white flex items-center justify-center&quot;&gt;&#13;&#10;        &lt;div className=&quot;text-center&quot;&gt;&#13;&#10;          &lt;div className=&quot;w-8 h-8 border-2 border-blue-600 border-t-transparent rounded-full animate-spin mx-auto mb-4&quot; /&gt;&#13;&#10;          &lt;p className=&quot;text-gray-600&quot;&gt;Carregando...&lt;/p&gt;&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/div&gt;&#13;&#10;    );&#13;&#10;  }&#13;&#10;&#13;&#10;  const renderActiveModule = () =&gt; {&#13;&#10;    switch (activeModule) {&#13;&#10;      case 'dashboard':&#13;&#10;        return &lt;Dashboard /&gt;;&#13;&#10;      case 'email':&#13;&#10;        return &lt;EmailClient /&gt;;&#13;&#10;      case 'kanban':&#13;&#10;        return &lt;KanbanBoard /&gt;;&#13;&#10;      case 'documents':&#13;&#10;        return &lt;DocumentsList /&gt;;&#13;&#10;      case 'team':&#13;&#10;        return (&#13;&#10;          &lt;div className=&quot;p-6&quot;&gt;&#13;&#10;            &lt;div className=&quot;max-w-4xl mx-auto&quot;&gt;&#13;&#10;              &lt;h1 className=&quot;text-3xl font-bold text-gray-900 mb-6 flex items-center&quot;&gt;&#13;&#10;                &lt;Users className=&quot;h-8 w-8 mr-3&quot; /&gt;&#13;&#10;                Gerenciamento de Equipe&#13;&#10;              &lt;/h1&gt;&#13;&#10;              &lt;div className=&quot;bg-white rounded-3xl shadow-sm border p-8 text-center&quot;&gt;&#13;&#10;                &lt;Users className=&quot;h-16 w-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#13;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-900 mb-2&quot;&gt;Módulo de Equipe&lt;/h3&gt;&#13;&#10;                &lt;p className=&quot;text-gray-600 mb-4&quot;&gt;Gerencie membros da equipe, funções e permissões&lt;/p&gt;&#13;&#10;                &lt;Button&gt;&#13;&#10;                  &lt;Plus className=&quot;h-4 w-4 mr-2&quot; /&gt;&#13;&#10;                  Adicionar Membro da Equipe&#13;&#10;                &lt;/Button&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        );&#13;&#10;      case 'settings':&#13;&#10;        return (&#13;&#10;          &lt;div className=&quot;p-6&quot;&gt;&#13;&#10;            &lt;div className=&quot;max-w-4xl mx-auto&quot;&gt;&#13;&#10;              &lt;h1 className=&quot;text-3xl font-bold text-gray-900 mb-6 flex items-center&quot;&gt;&#13;&#10;                &lt;Settings className=&quot;h-8 w-8 mr-3&quot; /&gt;&#13;&#10;                Configurações&#13;&#10;              &lt;/h1&gt;&#13;&#10;              &lt;div className=&quot;bg-white rounded-3xl shadow-sm border p-8 text-center&quot;&gt;&#13;&#10;                &lt;Settings className=&quot;h-16 w-16 text-gray-400 mx-auto mb-4&quot; /&gt;&#13;&#10;                &lt;h3 className=&quot;text-lg font-semibold text-gray-900 mb-2&quot;&gt;Configurações da Aplicação&lt;/h3&gt;&#13;&#10;                &lt;p className=&quot;text-gray-600 mb-4&quot;&gt;Configure suas preferências da aplicação&lt;/p&gt;&#13;&#10;                &lt;Button variant=&quot;secondary&quot;&gt;Configurar&lt;/Button&gt;&#13;&#10;              &lt;/div&gt;&#13;&#10;            &lt;/div&gt;&#13;&#10;          &lt;/div&gt;&#13;&#10;        );&#13;&#10;      default:&#13;&#10;        return &lt;Dashboard /&gt;;&#13;&#10;    }&#13;&#10;  };&#13;&#10;&#13;&#10;  return (&#13;&#10;    &lt;div className=&quot;min-h-screen bg-white flex flex-col&quot;&gt;&#13;&#10;      &lt;main&#13;&#10;        className={cn(&#13;&#10;          &quot;flex flex-row min-w-0 transition-all duration-300 ease-in-out max-h-screen&quot;,&#13;&#10;          &quot;w-full h-full&quot;,&#13;&#10;        )}&#13;&#10;      &gt;&#13;&#10;        &lt;Sidebar&#13;&#10;          navigationItems={NAVIGATION_ITEMS}&#13;&#10;          activeModule={activeModule}&#13;&#10;          onModuleChange={setActiveModule}&#13;&#10;          isOpen={sidebarOpen}&#13;&#10;          onToggle={() =&gt; setSidebarOpen(!sidebarOpen)}&#13;&#10;          user={user}&#13;&#10;        /&gt;&#13;&#10;        &lt;div className=&quot;flex flex-col w-full overflow-auto min-h-screen&quot;&gt;&#13;&#10;          {renderActiveModule()}&#13;&#10;        &lt;/div&gt;&#13;&#10;      &lt;/main&gt;&#13;&#10;    &lt;/div&gt;&#13;&#10;  );&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>